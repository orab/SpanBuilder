apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'org.jetbrains.dokka'

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    testImplementation 'junit:junit:4.12'
}

task sourceJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask)

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
}

project.afterEvaluate {
    publishing {
        publications {
            Publication(MavenPublication) {
                groupId 'com.orabfy.android'
                artifactId 'span-builder'
                version '1.0.0'

                artifact bundleReleaseAar
                artifact sourceJar
                artifact javadocJar

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    def addDeps = {
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }

                    configurations.api.dependencies.each addDeps
                    configurations.implementation.dependencies.each addDeps
                }
            }
        }
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray {
        user = properties.getProperty('bintrayUser')
        key = properties.getProperty('bintrayApiKey')
        publish = true
        pkg {
            repo = 'repo'
            name = 'SpanBuilder'
            websiteUrl = 'https://github.com/orab/SpanBuilder'
            vcsUrl = 'https://github.com/orab/SpanBuilder.git'
            licenses = ['Apache-2.0']

            version {
                name = '1.0.0'
                vcsTag = '1.0.0'
            }
        }
        publications = ['Publication']
    }
}